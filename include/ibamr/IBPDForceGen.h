// Filename: IBPDForceGen.h
// Created on 08 Apr 2016 by Amneet Bhalla
//
// Copyright (c) 2002-2014, Amneet Bhalla and Boyce Griffith.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice,
//      this list of conditions and the following disclaimer.
//
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//
//    * Neither the name of The University of North Carolina nor the names of its
//      contributors may be used to endorse or promote products derived from
//      this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

#ifndef included_IBPDForceGen
#define included_IBPDForceGen

/////////////////////////////// INCLUDES /////////////////////////////////////
#include <vector>

#include "ibamr/IBLagrangianForceStrategy.h"
#include "ibtk/LData.h"
#include "ibtk/LDataManager.h"
#include "tbox/DescribedClass.h"

/////////////////////////////// CLASS DEFINITION /////////////////////////////

namespace IBAMR
{
/*!
* \brief Class IBPDForceGen is a concrete IBLagrangianForceStrategy that
* is intended to be used in conjunction with curvilinear mesh data generated by
* class IBStandardInitializer.
*
* Class IBPDForceGen computes peridynamic force between bonds, which eventually
* gets applied at the IB points.
*/

class IBPDForceGen : public IBAMR::IBLagrangianForceStrategy
{
public:
    /*!
     * \brief Default constructor.
     */
    IBPDForceGen(SAMRAI::tbox::Pointer<SAMRAI::tbox::Database> input_db);

    /*!
     * \brief Destructor.
     */
    ~IBPDForceGen();

    /*!
     * \brief Setup the data needed to compute the forces on the specified level
     * of the patch hierarchy.
     */
    void initializeLevelData(SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                             int level_number,
                             double init_data_time,
                             bool initial_time,
                             IBTK::LDataManager* l_data_manager);
    /*!
     * \brief Compute the force generated by the Lagrangian structure on the
     * specified level of the patch hierarchy and the damage occured during bond
     * breaking.
     *
     * \note Nodal forces computed by this method are \em added to the force
     * vector.
     */
    void computeLagrangianForceAndDamage(SAMRAI::tbox::Pointer<IBTK::LData> F_data,
                                         SAMRAI::tbox::Pointer<IBTK::LData> D_data,
                                         SAMRAI::tbox::Pointer<IBTK::LData> X_data,
                                         SAMRAI::tbox::Pointer<IBTK::LData> U_data,
                                         SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                                         int level_number,
                                         double data_time,
                                         IBTK::LDataManager* l_data_manager);

private:
    /*!
     * \brief Copy constructor.
     *
     * \note This constructor is not implemented and should not be used.
     *
     * \param from The value to copy to this object.
     */
    IBPDForceGen(const IBPDForceGen& from);

    /*!
     * \brief Assignment operator.
     *
     * \note This operator is not implemented and should not be used.
     *
     * \param that The value to assign to this object.
     *
     * \return A reference to this object.
     */
    IBPDForceGen& operator=(const IBPDForceGen& that);

    /*!
     * \name Horizon.
     */
    double d_horizon, d_ds;

    /*!
     * \name Data maintained separately for each level of the patch hierarchy.
     */
    //\{
    struct BondData
    {
        std::vector<int> lag_mastr_node_idxs, lag_slave_node_idxs;
        std::vector<int> petsc_mastr_node_idxs, petsc_slave_node_idxs;
        std::vector<int> petsc_global_mastr_node_idxs, petsc_global_slave_node_idxs;
        std::vector<double*> parameters;
    };
    std::vector<BondData> d_bond_data;
    std::vector<SAMRAI::tbox::Pointer<IBTK::LData> > d_X_ghost_data, d_X0_ghost_data, d_B_ghost_data, d_FF_ghost_data,
        d_F_ghost_data, d_dmg_ghost_data, d_dX_data;
    std::vector<bool> d_is_initialized;
    //\}

    /*!
     * PD tensor routines.
     */
    //\{
    void computeShapeTensor(SAMRAI::tbox::Pointer<IBTK::LData> B_data,
                            SAMRAI::tbox::Pointer<IBTK::LData> X0_data,
                            SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                            int level_number,
                            double data_time,
                            IBTK::LDataManager* l_data_manager);

    void computeDeformationGradientTensor(SAMRAI::tbox::Pointer<IBTK::LData> FF_data,
                                          SAMRAI::tbox::Pointer<IBTK::LData> X_data,
                                          SAMRAI::tbox::Pointer<IBTK::LData> X0_data,
                                          SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                                          int level_number,
                                          double data_time,
                                          IBTK::LDataManager* l_data_manager);
    //\}
    /*!
     * Bond force routines.
     */
    void initializeBondLevelData(std::set<int>& nonlocal_petsc_idx_set,
                                 SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                                 int level_number,
                                 double init_data_time,
                                 bool initial_time,
                                 IBTK::LDataManager* l_data_manager);

    void computeLagrangianBondForceAndDamage(SAMRAI::tbox::Pointer<IBTK::LData> F_data,
                                             SAMRAI::tbox::Pointer<IBTK::LData> D_data,
                                             SAMRAI::tbox::Pointer<IBTK::LData> X_data,
                                             SAMRAI::tbox::Pointer<IBTK::LData> X0_data,
                                             SAMRAI::tbox::Pointer<IBTK::LData> FF_data,
                                             SAMRAI::tbox::Pointer<IBTK::LData> B_data,
                                             SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
                                             int level_number,
                                             double data_time,
                                             IBTK::LDataManager* l_data_manager);
};
} // namespace IBAMR

//////////////////////////////////////////////////////////////////////////////

#endif // #ifndef included_IBPDForceGen
